# General properties
# The buffer size in byte
io.file.buffer.size=524288

# Hive SerDe properties
# The string of column names
columns=c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32
# The string of column types
columns.types=struct<c1f1:int,c1f2:int>:struct<c2f1:int,c2f2:int>:struct<c3f1:int,c3f2:int>:struct<c4f1:int,c4f2:int>:struct<c5f1:int,c5f2:int>:struct<c6f1:int,c6f2:int>:struct<c7f1:int,c7f2:int>:struct<c8f1:int,c8f2:int>:struct<c9f1:int,c9f2:int>:struct<c10f1:int,c10f2:int>:struct<c11f1:int,c11f2:int>:struct<c12f1:int,c12f2:int>:struct<c13f1:int,c13f2:int>:struct<c14f1:int,c14f2:int>:struct<c15f1:int,c15f2:int>:struct<c16f1:int,c16f2:int>:struct<c17f1:int,c17f2:int>:struct<c18f1:int,c18f2:int>:struct<c19f1:int,c19f2:int>:struct<c20f1:int,c20f2:int>:struct<c21f1:int,c21f2:int>:struct<c22f1:int,c22f2:int>:struct<c23f1:int,c23f2:int>:struct<c24f1:int,c24f2:int>:struct<c25f1:int,c25f2:int>:struct<c26f1:int,c26f2:int>:struct<c27f1:int,c27f2:int>:struct<c28f1:int,c28f2:int>:struct<c29f1:int,c29f2:int>:struct<c30f1:int,c30f2:int>:struct<c31f1:int,c31f2:int>:struct<c32f1:int,c32f2:int>
# The class of SerDe
serde.class=org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe
# Column file group
columns.file.group=cfg1:c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32

# Value properties
# Define the range (for numeric data types) and length (for string) of values
# For numeric data types, a value will be uniformly distributed in [0, range).
# For a String, it will be randomly generated with the given length.
# Primitive types
range.int=10000
range.double=10000
length.string=20
# Primitive types appearing in complex types
range.map.int=10000
range.map.double=10000
length.map.string=20
size.map=10
range.struct.int=10000
range.struct.double=10000
length.struct.string=20

# RCFile properties
# RCFile row group size in byte
# hive.io.rcfile.record.buffer.size=4194304
